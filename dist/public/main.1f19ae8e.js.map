{"version":3,"sources":["main.js"],"names":["registrationData","occupations","stateOptions","fullNameField","document","getElementById","emailField","passwordField","confirmPasswordField","formSubmit","accountCreationForm","promptText","submissionSuccessful","occupationList","statesList","populateOccupations","i","length","options","Option","populateStates","name","comparePasswords","value","classList","remove","showConfirmation","setTimeout","add","window","addEventListener","fetch","then","response","json","data","states","accountCreated","method","body","JSON","stringify","headers","ok","catch","error"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"../../src/public","sourcesContent":["'use strict';\n\n// Data variables\n\nlet registrationData;\nlet occupations;\nlet stateOptions;\n\n// Form selectors\nconst fullNameField = document.getElementById('userFullName');\nconst emailField = document.getElementById('userEmail');\nconst passwordField = document.getElementById('userPassword');\nconst confirmPasswordField = document.getElementById('confirmUserPassword');\nconst formSubmit = document.getElementById('submitRegistration');\nconst accountCreationForm = document.getElementById('creationForm');\nconst promptText = document.getElementById('accountCreationText');\nconst submissionSuccessful = document.getElementById('submissionSuccessful');\nlet occupationList = document.getElementById('occupationList');\nlet statesList = document.getElementById('statesList');\n\n// Form population functions\n\nconst populateOccupations = () => {\n  for (let i = 0; i < occupations.length; i++) {\n    occupationList.options[i] = new Option(`${occupations[i]}`);\n  }\n};\n\nconst populateStates = () => {\n  for (let i = 0; i < stateOptions.length; i++) {\n    statesList.options[i] = new Option(`${stateOptions[i + 1].name}`);\n  }\n};\n\nconst comparePasswords = () => {\n  if (passwordField.value === confirmPasswordField.value) {\n    return true;\n  } else {\n    document.getElementById('passwordErr').classList.remove('hidden');\n  }\n}\n\n// Submission confirmation\n\nconst showConfirmation = () => {\n  setTimeout(() => {\n    accountCreationForm.classList.add('hidden');\n    promptText.classList.add('hidden');\n    submissionSuccessful.classList.remove('hidden');\n  }, 500)\n}\n\n// Event Listeners/Fetches\n\nwindow.addEventListener('load', () => {\n  fetch('https://frontend-take-home.fetchrewards.com/form')\n  .then(response => response.json())\n  .then(data => registrationData = data)\n  .then(data => occupations = registrationData.occupations)\n  .then(data => stateOptions = registrationData.states)\n  .then(() => populateOccupations())\n  .then(() => populateStates())\n});\n\nformSubmit.addEventListener('click', () => {\n  let accountCreated;\n  if (fullNameField.value && emailField.value && passwordField.value && confirmPasswordField.value) {\n    if (comparePasswords()) {\n      fetch('https://frontend-take-home.fetchrewards.com/form', {\n        method: 'POST',\n        body: JSON.stringify(\n          {\n            \"name\": fullNameField.value,\n            \"email\": emailField.value,\n            \"password\": passwordField.value,\n            \"occupation\": occupationList.value,\n            \"state\": statesList.value\n          }\n        ),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => {\n        if (response.ok) {\n          accountCreationForm.classList.add('vanish');\n          promptText.classList.add('vanish');\n          accountCreated = true;\n          showConfirmation();\n          return response.json();\n        }\n      })\n      .catch(error => {\n        if (!accountCreated) {\n          document.getElementById('submissionErr').classList.remove('hidden');\n        }\n      })\n    }\n  } else {\n    document.getElementById('incompleteForm').classList.remove('hidden');\n  }\n})\n"]}